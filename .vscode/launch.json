{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda with API Gateway",
            "invokeTarget": {
                "target": "api",
                "templatePath": "Template Location",
                "logicalId": "Function Logical ID"
            },
            "api": {
                "path": "Path",
                "httpMethod": "Method",
                "payload": {
                    "json": {}
                }
            }
        },
        {
            "name": "Launch current script in console",
            "type": "php",
            "request": "launch",
            "program": "${file}",
            "cwd": "${fileDirname}",
            "externalConsole": false,
            "port": 9003
        },
        {
            "name": "Launch built-in server",
            "type": "php",
            "request": "launch",
            "runtimeArgs": [
                "-S",
                "localhost:8000",
                "-t",
                "."
            ],
            "port": 9003,
            "serverReadyAction": {
                "action": "openExternally"
            }
        },
        {
            "name": "Launch & Profile built-in server",
            "type": "php",
            "request": "launch",
            "noDebug": true,
            "profile": true,
            "runtimeArgs": [
                "-S",
                "localhost:8000",
                "-t",
                "."
            ],
            "port": 9003,
            "serverReadyAction": {
                "action": "openExternally"
            }
        },
        {
            "args": [
                "generator"
            ],
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "name": "Yeoman generator",
            "program": "${workspaceFolder}/node_modules/yo/lib/cli.js",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "name": "nodemon",
            "program": "${workspaceFolder}/app.js",
            "request": "launch",
            "restart": true,
            "runtimeExecutable": "nodemon",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "args": [
                "-u",
                "tdd",
                "--timeout",
                "999999",
                "--colors",
                "${workspaceFolder}/test"
            ],
            "internalConsoleOptions": "openOnSessionStart",
            "name": "Mocha Tests",
            "program": "mocha",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Launch via NPM",
            "request": "launch",
            "runtimeArgs": [
                "run-script",
                "debug"
            ],
            "runtimeExecutable": "npm",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Launch Program",
            "program": "${workspaceFolder}/app.js",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "args": [
                "task"
            ],
            "name": "Gulp task",
            "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Electron Main",
            "program": "${workspaceFolder}/main.js",
            "request": "launch",
            "runtimeExecutable": "electron",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Attach by Process ID",
            "processId": "${command:PickProcess}",
            "request": "attach",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Attach to Edge",
            "port": 9222,
            "request": "attach",
            "type": "msedge",
            "webRoot": "${workspaceFolder}"
        },
        {
            "name": "Attach to Edge",
            "port": 9222,
            "request": "attach",
            "type": "msedge",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL: (debugCurrentFile)",
            "program": "${workspaceFolder}/${fileBasenameNoExtension}.int",
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): Remote-SSH",
            "program": "<insert-program-name-here>",
            "env": {
                "TERM": "xterm",
                "DISPLAY": "<hostname-or-ip:D.S>"
            },
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): remote",
            "program": "<insert-program-name-here>",
            "remoteDebug": {
                "machine": "Please enter the name or IP address of the machine runing cobdebugremote.",
                "port": 0
            },
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): 64-bit",
            "program": "${workspaceFolder}/<insert-program-name-here>",
            "cwd": "${workspaceFolder}",
            "is64Bit": true,
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native)",
            "program": "${workspaceFolder}/<insert-program-name-here>",
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): Enterprise Server",
            "enterpriseServer": {
                "serverName": "Please enter the name of the server to debug.",
                "serverAddress": "Please enter the address of the 'mfcs-mp' or 'soap' listener for the server. eg tcp:127.0.0.1:<nnn>."
            }
        },
        {
            "type": "cobol",
            "request": "attach",
            "name": "COBOL (native): Attach to process",
            "processId": "${command:pickProcess}"
        },
        {
            "type": "clarinet",
            "request": "launch",
            "name": "Call .foo.bar",
            "manifest": "/Clarinet.toml",
            "expression": "(contract-call? .foo bar 42)"
        },
        {
            "name": "Launch Chrome",
            "request": "launch",
            "type": "chrome",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        },
        {
            "name": "Attach to Chrome",
            "port": 9222,
            "request": "attach",
            "type": "chrome",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda",
            "invokeTarget": {
                "target": "template",
                "templatePath": "Template Location",
                "logicalId": "Function Logical ID"
            },
            "lambda": {
                "payload": {
                    "json": {}
                }
            }
        },
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda",
            "invokeTarget": {
                "target": "code",
                "lambdaHandler": "Function Handler",
                "projectRoot": "${workspaceFolder}"
            },
            "lambda": {
                "runtime": "Lambda Runtime",
                "payload": {
                    "json": {}
                }
            }
        },
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda with API Gateway",
            "invokeTarget": {
                "target": "api",
                "templatePath": "Template Location",
                "logicalId": "Function Logical ID"
            },
            "api": {
                "path": "Path",
                "httpMethod": "Method",
                "payload": {
                    "json": {}
                }
            }
        },



        {
            "type": "chrome",
            "request": "launch",
            "name": "Launch Chrome against localhost",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        }
    ]
}